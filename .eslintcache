[{"C:\\Users\\user\\mot-de-passe-noel\\src\\index.js":"1","C:\\Users\\user\\mot-de-passe-noel\\src\\reportWebVitals.js":"2","C:\\Users\\user\\mot-de-passe-noel\\src\\Timer.js":"3","C:\\Users\\user\\mot-de-passe-noel\\src\\Game.js":"4","C:\\Users\\user\\mot-de-passe-noel\\src\\ButtonWithCallback.js":"5","C:\\Users\\user\\mot-de-passe-noel\\src\\WordComponent.js":"6","C:\\Users\\user\\mot-de-passe-noel\\src\\Word.js":"7","C:\\Users\\user\\mot-de-passe-noel\\src\\History.js":"8","C:\\Users\\user\\mot-de-passe-noel\\src\\GameOrganizer.js":"9","C:\\Users\\user\\mot-de-passe-noel\\src\\Router.js":"10","C:\\Users\\user\\mot-de-passe-noel\\src\\words.js":"11","C:\\Users\\user\\mot-de-passe-noel\\src\\GenerateTeams.js":"12","C:\\Users\\user\\mot-de-passe-noel\\src\\testWords.js":"13"},{"size":509,"mtime":1608674488428,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1225,"mtime":1608902829274,"results":"17","hashOfConfig":"15"},{"size":1432,"mtime":1608904039214,"results":"18","hashOfConfig":"15"},{"size":379,"mtime":1608674734247,"results":"19","hashOfConfig":"15"},{"size":342,"mtime":1608393875985,"results":"20","hashOfConfig":"15"},{"size":216,"mtime":1607987452201,"results":"21","hashOfConfig":"15"},{"size":888,"mtime":1607988012121,"results":"22","hashOfConfig":"15"},{"size":625,"mtime":1608906979248,"results":"23","hashOfConfig":"15"},{"size":1752,"mtime":1608912236630,"results":"24","hashOfConfig":"15"},{"size":5143,"mtime":1608902293121,"results":"25","hashOfConfig":"15"},{"size":2782,"mtime":1609021176101,"results":"26","hashOfConfig":"15"},{"size":258,"mtime":1608803950188,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"cc6jft",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\user\\mot-de-passe-noel\\src\\index.js",[],["62","63"],"C:\\Users\\user\\mot-de-passe-noel\\src\\reportWebVitals.js",[],"C:\\Users\\user\\mot-de-passe-noel\\src\\Timer.js",["64"],"import React from 'react'\nimport { useState, useEffect } from 'react';\n\nconst Timer = (props:any) => {\n    const {initialMinute = 0,initialSeconds = 0} = props;\n    const { overCallback } = props;\n    const [ minutes, setMinutes ] = useState(initialMinute);\n    const [seconds, setSeconds ] =  useState(initialSeconds);\n    useEffect(()=>{\n    let myInterval = setInterval(() => {\n            if (seconds > 0) {\n                setSeconds(seconds - 1);\n            }\n            if (seconds === 0) {\n                if (minutes === 0) {\n                    clearInterval(myInterval)\n                } else {\n                    setMinutes(minutes - 1);\n                    setSeconds(59);\n                }\n            } \n        }, 1000)\n        return ()=> {\n            clearInterval(myInterval);\n          };\n    });\n\n    useEffect(() => {\n        setSeconds(initialSeconds);\n    }, [])\n\n    if (minutes === 0 && seconds === 0) {\n        overCallback();\n        return null;\n    }\n\n    return (\n        <div className=\"timer\">\n        { minutes === 0 && seconds === 0\n            ? null\n            : <div> {minutes}:{seconds < 10 ?  `0${seconds}` : seconds}</div> \n        }\n        </div>\n    )\n}\n\nexport default Timer;","C:\\Users\\user\\mot-de-passe-noel\\src\\Game.js",["65","66","67"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Word from './Word';\r\nimport WordComponent from './WordComponent';\r\nimport ButtonWithCallback from './ButtonWithCallback';\r\nimport { MdDone, MdClose } from 'react-icons/md';\r\nimport History from './History'\r\nimport Timer from './Timer';\r\n\r\n\r\n\r\nconst Game = (props: any) => {\r\n    const [wordIndex, setWordIndex] = useState(0);\r\n    const { words, time, childId } = props;\r\n\r\n    useEffect(() => {setWordIndex(0)}, [childId]);\r\n\r\n    if (wordIndex === -1) {\r\n        return <History words={words} />;\r\n    }\r\n    \r\n    const acceptCallback = () => {\r\n        words[wordIndex].guess()\r\n        setWordIndex(wordIndex + 1)\r\n    }\r\n\r\n    const skipCallback = () => {\r\n        words[wordIndex].skip()\r\n        setWordIndex(wordIndex + 1)\r\n    }\r\n\r\n    console.log(childId);\r\n\r\n    return (\r\n    <div className='pane'>\r\n        <Timer initialSeconds={time} overCallback={() => setWordIndex(-1)} key={childId}/>\r\n        <History words={words} />\r\n        <div className='bottom-bar'>\r\n            <WordComponent word={words[wordIndex]} />\r\n            <div className=\"flex-center\">\r\n                <ButtonWithCallback icon={MdDone} callback={skipCallback} icon={MdClose} />\r\n                <ButtonWithCallback icon={MdDone} callback={acceptCallback} icon={MdDone} />\r\n            </div>  \r\n        </div>\r\n    </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Game;","C:\\Users\\user\\mot-de-passe-noel\\src\\ButtonWithCallback.js",["68","69"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst ButtonWithCallback = (props:any) => {\r\n    const { callback, icon } = props;\r\n    const { text } = props;\r\n\r\n    return <button type=\"button\" onClick={() => callback()}>\r\n        {(icon===undefined) ? text : React.createElement(icon, {})}\r\n  </button>\r\n}\r\n\r\nexport default ButtonWithCallback;\r\n\r\n","C:\\Users\\user\\mot-de-passe-noel\\src\\WordComponent.js",["70","71"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst WordComponent = (props:any) => {\r\n    const {word} = props\r\n    return (\r\n        <div className=\"word flex-center\">\r\n            <div className=\"text\">\r\n                {word.value}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordComponent;","C:\\Users\\user\\mot-de-passe-noel\\src\\Word.js",[],"C:\\Users\\user\\mot-de-passe-noel\\src\\History.js",["72","73"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { MdDone, MdClose } from 'react-icons/md';\r\n\r\n\r\nconst History = (props:any) => {\r\n    const { words } = props;\r\n\r\n    return (\r\n        <div className=\"history\">\r\n            {words.map( x => <WordWithInfo word={x}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst WordWithInfo = (props:any) => {\r\n    const { word } = props;\r\n    if (word.status === undefined) {\r\n        return null\r\n    }\r\n\r\n    const icon = () => {\r\n        if (word.status === 'guessed') {\r\n            return <MdDone/>\r\n        }\r\n\r\n        if (word.status === 'skipped') {\r\n            return <MdClose/>\r\n        }\r\n        \r\n        return null\r\n    }\r\n    return (\r\n        <div className={\"word-info \" + word.status}> \r\n         <div> {word.value} </div>\r\n         <div> {icon()} </div>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default History;","C:\\Users\\user\\mot-de-passe-noel\\src\\GameOrganizer.js",["74","75"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport wordsData from './words';\r\nimport testWordsData from './testWords';\r\nimport Word from './Word.js'\r\nimport Game from './Game';\r\n\r\nconst parseAndShuffle = (array) => {\r\n    return array.map(e => new Word(e)).sort(() => Math.random() - 0.5);\r\n}\r\n\r\nconst GameOrganizer = (props:any) => {\r\n    const { test, index } = props;\r\n    const words = parseAndShuffle(test ? testWordsData : wordsData.slice((index-1) * 25, index*25));\r\n    const time = 60;\r\n\r\n    return <Game words={words} time={time} childId={index}/>\r\n\r\n}\r\n\r\nexport default GameOrganizer;","C:\\Users\\user\\mot-de-passe-noel\\src\\Router.js",["76","77","78","79","80","81","82"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport GenerateTeams from './GenerateTeams';\r\nimport Game from './Game';\r\nimport ButtonWithCallback from './ButtonWithCallback';\r\nimport { MdDone, MdClose } from 'react-icons/md';\r\nimport testWordsData from './testWords'; \r\nimport Word from './Word';\r\nimport GameOrganizer from './GameOrganizer'\r\nimport { Player } from 'video-react';\r\nimport \"../node_modules/video-react/dist/video-react.css\"; // import css\r\n\r\n\r\n\r\n\r\n\r\nconst RouterComponent = (props:any) => {\r\n    const [route, setRoute] = useState('')\r\n    return (\r\n\r\n        <div className=\"root\">\r\n        <div className=\"left-pane\">\r\n        <ButtonWithCallback text={'Intro'} callback={() => setRoute('vid')}/>\r\n        <ButtonWithCallback text={'Faire un test'} callback={() => setRoute('test')}/>\r\n        <ButtonWithCallback text={'Generer les equipes'} callback={() => setRoute('teams')}/>\r\n        {[1,2,3,4,5,6,7,8,9,10].map((index) => {return <ButtonWithCallback text={`Lancer la partie ${index}`} callback={() => setRoute(`play${index}`)}/>} )}\r\n        </div>\r\n\r\n        <div className=\"pane\">\r\n            {component(route)}\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst component = (route) => {\r\n    if (route['startsWith']('play')) {\r\n        return <GameOrganizer index={route.split('play')[1]}/>\r\n    }\r\n\r\n    if (route === 'teams') {\r\n        return <GenerateTeams />\r\n    }\r\n\r\n    if (route === 'test') {\r\n        return <GameOrganizer test/>\r\n    }\r\n\r\n    \r\n    if (route === 'vid') {\r\n        return     <Player>\r\n      <source src='/vid.mp4' />\r\n    </Player>\r\n    }\r\n}\r\n\r\n\r\nconst TextComponent = (text: str) => {\r\n    return (<div>\r\n    {text}\r\n    </div>)\r\n}\r\n\r\nexport default RouterComponent;","C:\\Users\\user\\mot-de-passe-noel\\src\\words.js",[],"C:\\Users\\user\\mot-de-passe-noel\\src\\GenerateTeams.js",[],"C:\\Users\\user\\mot-de-passe-noel\\src\\testWords.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":30,"column":8,"nodeType":"89","endLine":30,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":41,"column":75,"nodeType":"97","endLine":41,"endColumn":89},{"ruleId":"95","severity":1,"message":"96","line":42,"column":77,"nodeType":"97","endLine":42,"endColumn":90},{"ruleId":"91","severity":1,"message":"98","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":18},{"ruleId":"91","severity":1,"message":"99","line":2,"column":20,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"98","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":18},{"ruleId":"91","severity":1,"message":"99","line":2,"column":20,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"98","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":18},{"ruleId":"91","severity":1,"message":"99","line":2,"column":20,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"98","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":18},{"ruleId":"91","severity":1,"message":"99","line":2,"column":20,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"99","line":2,"column":20,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"100","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":12},{"ruleId":"91","severity":1,"message":"101","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":16},{"ruleId":"91","severity":1,"message":"102","line":6,"column":18,"nodeType":"93","messageId":"94","endLine":6,"endColumn":25},{"ruleId":"91","severity":1,"message":"103","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":12},{"ruleId":"91","severity":1,"message":"104","line":59,"column":7,"nodeType":"93","messageId":"94","endLine":59,"endColumn":20},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialSeconds'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'Word' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'useEffect' is defined but never used.","'Game' is defined but never used.","'MdDone' is defined but never used.","'MdClose' is defined but never used.","'testWordsData' is defined but never used.","'TextComponent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [initialSeconds]",{"range":"110","text":"111"},[887,889],"[initialSeconds]"]